import subprocess
import sys
import os
import re

clist = {}
res = subprocess.check_output(['numactl','-H'])
ln = res.split('\n')
nodes  = 0
for line in ln:
   if len(re.findall(r'available: \d+ nodes',line)) != 0:
	val  = line.split(":")
	ccnt = re.findall(r'\d+', val[1]);
	nodes = int(ccnt[0])

print(" Available NUMA nodes = %s" % (nodes))

for line in ln:
  if len(re.findall(r'node \d+ cpus', line)) != 0:
     tmp = line.split(":")
     cpu = re.findall(r'\d+', tmp[0])
     clist[cpu[0]] = tmp[1] 


keys = sorted(clist.keys())

##bind1   = numactl -m 0  --physcpubind=1
slist = []
cnt = 0
for node in keys:
   cpulist = clist[node].split()
   for cpu in cpulist:
       tstr = "bind%s = numactl -m %s --physcpubind=%s" % (cnt, node, cpu)
       print(tstr)
       cnt+=1
    

       

## test cases 
"""
ln = [" available: 8 nodes (0-7)",
 " node 0 cpus: 0 1 2 24 25 26",
 " node 0 size: 31692 MB",
 " node 0 free: 31568 MB",
 " node 1 cpus: 3 4 5 27 28 29",
 " node 1 size: 32254 MB",
 " node 1 free: 32152 MB",
 " node 2 cpus: 6 7 8 30 31 32",
 " node 2 size: 32254 MB",
 " node 2 free: 32139 MB",
 " node 3 cpus: 9 10 11 33 34 35",
 " node 3 size: 32254 MB",
 " node 3 free: 32170 MB",
 " node 4 cpus: 12 13 14 36 37 38",
 " node 4 size: 32254 MB",
 " node 4 free: 32139 MB",
 " node 5 cpus: 15 16 17 39 40 41",
 " node 5 size: 32254 MB",
 " node 5 free: 32136 MB",
 " node 6 cpus: 18 19 20 42 43 44",
 " node 6 size: 32225 MB",
 " node 6 free: 32131 MB",
 " node 7 cpus: 21 22 23 45 46 47",
 " node 7 size: 32241 MB",
 " node 7 free: 32157 MB",
 " node distances:",
 " node   0   1   2   3   4   5   6   7",
 "   0:  10  11  12  12  12  12  12  12",
 "   1:  11  10  12  12  12  12  12  12",
 "   2:  12  12  10  11  12  12  12  12",
 "   3:  12  12  11  10  12  12  12  12",
 "   4:  12  12  12  12  10  11  12  12",
 "   5:  12  12  12  12  11  10  12  12",
 "   6:  12  12  12  12  12  12  10  11",
 "   7:  12  12  12  12  12  12  11  10 "]

ln = [  " available: 32 nodes (0-31)",
     " node 0 cpus: 0 1 2 3 128 129 130 131",
     " node 0 size: 15675 MB",
     " node 0 free: 15546 MB",
     " node 1 cpus: 4 5 6 7 132 133 134 135",
     " node 1 size: 16126 MB",
     " node 1 free: 15941 MB",
     " node 2 cpus: 8 9 10 11 136 137 138 139",
     " node 2 size: 16126 MB",
     " node 2 free: 16014 MB",
     " node 3 cpus: 12 13 14 15 140 141 142 143",
     " node 3 size: 16125 MB",
     " node 3 free: 16024 MB",
     " node 4 cpus: 16 17 18 19 144 145 146 147",
     " node 4 size: 16126 MB",
     " node 4 free: 16045 MB",
     " node 5 cpus: 20 21 22 23 148 149 150 151",
     " node 5 size: 16126 MB",
     " node 5 free: 16049 MB",
     " node 6 cpus: 24 25 26 27 152 153 154 155",
     " node 6 size: 16126 MB",
     " node 6 free: 16050 MB",
     " node 7 cpus: 28 29 30 31 156 157 158 159",
     " node 7 size: 16125 MB",
     " node 7 free: 16023 MB",
     " node 8 cpus: 32 33 34 35 160 161 162 163",
     " node 8 size: 16126 MB",
     " node 8 free: 16018 MB",
     " node 9 cpus: 36 37 38 39 164 165 166 167",
     " node 9 size: 16126 MB",
     " node 9 free: 16025 MB",
     " node 10 cpus: 40 41 42 43 168 169 170 171",
     " node 10 size: 16126 MB",
     " node 10 free: 16032 MB",
     " node 11 cpus: 44 45 46 47 172 173 174 175",
     " node 11 size: 16125 MB",
     " node 11 free: 16034 MB",
     " node 12 cpus: 48 49 50 51 176 177 178 179",
     " node 12 size: 16126 MB",
     " node 12 free: 16041 MB",
     " node 13 cpus: 52 53 54 55 180 181 182 183",
     " node 13 size: 16126 MB",
     " node 13 free: 16025 MB",
     " node 14 cpus: 56 57 58 59 184 185 186 187",
     " node 14 size: 16126 MB",
     " node 14 free: 16037 MB",
     " node 15 cpus: 60 61 62 63 188 189 190 191",
     " node 15 size: 16113 MB",
     " node 15 free: 15694 MB",
     " node 16 cpus: 64 65 66 67 192 193 194 195",
     " node 16 size: 16126 MB",
     " node 16 free: 15994 MB",
     " node 17 cpus: 68 69 70 71 196 197 198 199",
     " node 17 size: 16126 MB",
     " node 17 free: 16035 MB",
     " node 18 cpus: 72 73 74 75 200 201 202 203",
     " node 18 size: 16096 MB",
     " node 18 free: 16020 MB",
     " node 19 cpus: 76 77 78 79 204 205 206 207",
     " node 19 size: 16125 MB",
     " node 19 free: 16015 MB",
     " node 20 cpus: 80 81 82 83 208 209 210 211",
     " node 20 size: 16126 MB",
     " node 20 free: 16063 MB",
     " node 21 cpus: 84 85 86 87 212 213 214 215",
     " node 21 size: 16126 MB",
     " node 21 free: 16048 MB",
     " node 22 cpus: 88 89 90 91 216 217 218 219",
     " node 22 size: 16126 MB",
     " node 22 free: 16061 MB",
     " node 23 cpus: 92 93 94 95 220 221 222 223",
     " node 23 size: 16125 MB",
     " node 23 free: 16057 MB",
     " node 24 cpus: 96 97 98 99 224 225 226 227",
     " node 24 size: 16126 MB",
     " node 24 free: 16053 MB",
     " node 25 cpus: 100 101 102 103 228 229 230 231",
     " node 25 size: 16126 MB",
     " node 25 free: 16057 MB",
     " node 26 cpus: 104 105 106 107 232 233 234 235",
     " node 26 size: 16126 MB",
     " node 26 free: 16062 MB",
     " node 27 cpus: 108 109 110 111 236 237 238 239",
     " node 27 size: 16125 MB",
     " node 27 free: 16027 MB",
     " node 28 cpus: 112 113 114 115 240 241 242 243",
     " node 28 size: 16126 MB",
     " node 28 free: 16061 MB",
     " node 29 cpus: 116 117 118 119 244 245 246 247",
     " node 29 size: 16126 MB",
     " node 29 free: 16061 MB",
     " node 30 cpus: 120 121 122 123 248 249 250 251",
     " node 30 size: 16126 MB",
     " node 30 free: 16051 MB",
     " node 31 cpus: 124 125 126 127 252 253 254 255",
     " node 31 size: 16122 MB",
     " node 31 free: 16060 MB",
     " node distances:",
     "  node   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19 ",
     " 20  21  22  23  24  25  26  27  28  29  30  3",
     "   0:  10  11  11  11  12  12  12  12  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   1:  11  10  11  11  12  12  12  12  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   2:  11  11  10  11  12  12  12  12  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   3:  11  11  11  10  12  12  12  12  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   4:  12  12  12  12  10  11  11  11  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   5:  12  12  12  12  11  10  11  11  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   6:  12  12  12  12  11  11  10  11  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   7:  12  12  12  12  11  11  11  10  12  12  12  12  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   8:  12  12  12  12  12  12  12  12  10  11  11  11  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "   9:  12  12  12  12  12  12  12  12  11  10  11  11  12  12  12  12  32  32  32  32",
     "   32  32  32  32  32  32  32  32  32  32  32  32",
     "  10:  12  12  12  12  12  12  12  12  11  11  10  11  12  12  12  12  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  11:  12  12  12  12  12  12  12  12  11  11  11  10  12  12  12  12  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  12:  12  12  12  12  12  12  12  12  12  12  12  12  10  11  11  11  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  13:  12  12  12  12  12  12  12  12  12  12  12  12  11  10  11  11  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  14:  12  12  12  12  12  12  12  12  12  12  12  12  11  11  10  11  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  15:  12  12  12  12  12  12  12  12  12  12  12  12  11  11  11  10  32  32  32  32",
     "  32  32  32  32  32  32  32  32  32  32  32  32",
     "  16:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  10  11  11  11",
     "  12  12  12  12  12  12  12  12  12  12  12  12",
     "  17:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  11  10  11  11",
     "  12  12  12  12  12  12  12  12  12  12  12  12",
     "  18:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  11  11  10  11",
     "  12  12  12  12  12  12  12  12  12  12  12  12",
     "  19:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  11  11  11  10",
     "  12  12  12  12  12  12  12  12  12  12  12  12",
     "  20:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  10  11  11  11  12  12  12  12  12  12  12  12",
     "  21:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  11  10  11  11  12  12  12  12  12  12  12  12",
     "  22:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  11  11  10  11  12  12  12  12  12  12  12  12",
     "  23:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  11  11  11  10  12  12  12  12  12  12  12  12",
     "  24:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  10  11  11  11  12  12  12  12",
     "  25:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  11  10  11  11  12  12  12  12",
     "  26:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  11  11  10  11  12  12  12  12",
     "  27:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  11  11  11  10  12  12  12  12",
     "  28:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  12  12  12  12  10  11  11  11",
     "  29:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  12  12  12  12  11  10  11  11",
     "  30:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  12  12  12  12  11  11  10  11",
     "  31:  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  32  12  12  12  12",
     "  12  12  12  12  12  12  12  12  11  11  11  10 "]
"""
## 32 numa nodes
    
